# python_version 3.7.6
#
# The parse_version_from_requirements() function in the installPipfile.groovy
# file of the Jenkins Shared Library uses the python_version comment to set
# the version of python used.

# Distributed (released) dependencies
#
# The python modules listed below specify a known working combination required
# by the python code in this repository.  The procedure used to set up a
# suitable python environment for it installs the version of each module in
# the list.  Using a specific version ensures a controlled infrastructure for
# development, testing and release of this repository.
#
# Another repository might depend on python code defined in this one.  The
# procedure to set up a suitable python environment for that repository may
# pip-install this one as editable using this repository's setup.py file.  The
# same modules should appear in the setup.py list as given below.

appdirs==1.4.3
attrs==21.2.0
black==21.5b1
click==8.0.0
distlib==0.3.0
execnet==1.9.0
filelock==3.0.12
importlib-metadata==1.6.0
iniconfig==1.1.1
mypy-extensions==0.4.3
packaging==20.9
pathspec==0.8.1
pluggy==0.13.1
py==1.10.0
pyparsing==2.4.7
pytest==6.2.4
pytest-forked==1.3.0
pytest-xdist==2.3.0
regex==2021.4.4
six==1.14.0
toml==0.10.2
typed-ast==1.4.3
typing-extensions==3.10.0.0
virtualenv==20.0.15
zipp==3.1.0

# Development dependencies
#
# Each link listed below specifies the path to a setup.py file which are
# installed in editable mode with '-e $PATH' (without the quotes).
#
# If python code in this repository depends on python code under development
# in another repository, then an entry for that other respository should
# appear in this list instead of the released dependencies list.
#
# If this repository uses the setup functionality (e.g., script entry points)
# of its own setup.py file, then this list must include an entry for that
# setup.py file, e.g., '-e .' or '-e ./python' (without the quotes).
-e ./python
